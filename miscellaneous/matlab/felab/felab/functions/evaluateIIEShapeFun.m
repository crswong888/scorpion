function [H, dH] = evaluateIIEShapeFun(xi, Omega, component)
    %// parse 'component' input controlling which component of the IIE shape function is desired
    params = inputParser;
    addRequired(params, 'component', @(x) any(validatestring(x, {'uy', 'uz', 'ry', 'rz'})))
    parse(params, component);


    if (strcmp(component, 'uy'))
        H = [2 - 6 * Omega - 3 * xi + 6 * Omega * xi + xi^3,...
             -1 + 3 * Omega + xi + xi^2 - 3 * Omega * xi^2 - xi^3,...
             2 - 6 * Omega + 3 * xi - 6 * Omega * xi - xi^3,...
             1 - 3 * Omega + xi - xi^2 + 3 * Omega * xi^2 - xi^3] / (4 - 12 * Omega);
        
        dH = [-3 + 6 * Omega + 3 * xi^2,...
              1 + 2 * xi - 6 * Omega * xi - 3 * xi^2,...
              3 - 6 * Omega - 3 * xi^2,...
              1 - 2 * xi + 6 * Omega * xi - 3 * xi^2] / (4 - 12 * Omega);
    elseif (strcmp(component, 'uz'))
        H = [2 + 6 * Omega - 3 * xi - 6 * Omega * xi + xi^3,...
             -1 - 3 * Omega + xi + xi^2 + 3 * Omega * xi^2 - xi^3,...
             2 + 6 * Omega + 3 * xi + 6 * Omega * xi - xi^3,...
             1 + 3 * Omega + xi - xi^2 - 3 * Omega * xi^2 - xi^3] / (4 + 12 * Omega);
        
        dH = [-3 - 6 * Omega + 3 * xi^2,...
              1 + 2 * xi + 6 * Omega * xi - 3 * xi^2,...
              3 + 6 * Omega - 3 * xi^2,...
              1 - 2 * xi - 6 * Omega * xi - 3 * xi^2] / (4 + 12 * Omega);
    elseif (strcmp(component, 'ry'))
        H = [3 - 3 * xi^2,...
             -1 + 6 * Omega - 2 * xi - 6 * Omega * xi + 3 * xi^2,...
             -3 + 3 * xi^2,...
             -1 + 6 * Omega + 2 * xi + 6 * Omega * xi + 3 * xi^2] / (4 + 12 * Omega);
         
        dH = [-3 * xi, -1 - 3 * Omega + 3 * xi, 3 * xi, 1 + 3 * Omega + 3 * xi] / (2 + 6 * Omega);
    else
        H = [3 - 3 * xi^2,...
             -1 - 6 * Omega - 2 * xi + 6 * Omega * xi + 3 * xi^2,...
             -3 + 3 * xi^2,...
             -1 - 6 * Omega + 2 * xi - 6 * Omega * xi + 3 * xi^2] / (4 - 12 * Omega);
         
        dH = [-3 * xi, -1 + 3 * Omega + 3 * xi, 3 * xi, 1 - 3 * Omega + 3 * xi] / (2 - 6 * Omega);
    end
end