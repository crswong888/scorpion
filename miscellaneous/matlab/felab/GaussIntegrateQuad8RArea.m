clear all
format longeng

Gauss2P = 1 / sqrt(3) ;
Weight2P = 1.0 ;

QP = [ -Gauss2P -Gauss2P ; Gauss2P -Gauss2P ; Gauss2P Gauss2P ; -Gauss2P Gauss2P ] ;
node = [ 0 0 ; 4 0 ; 4 4 ; 0 4 ; 2 0.5 ; 4.5 2 ; 2 4.5 ; 0.5 2 ] ;

%// build Jacobian at QP and compute the integral
JQP = zeros(2,2) ; Area = 0 ;
for qp = 1:4
    JQP(1,:) = 1 / 4 * (-((QP(qp,1) - 1) + (QP(qp,1) + QP(qp,2) + 1)) * (QP(qp,2) - 1) * ...
               node(1,:) - ((QP(qp,1) + 1) + (QP(qp,1) - QP(qp,2) - 1)) * (QP(qp,2) - 1) * ...
               node(2,:) + ((QP(qp,1) + 1) + (QP(qp,1) + QP(qp,2) - 1)) * (QP(qp,2) + 1) * ...
               node(3,:) + ((QP(qp,1) - 1) + (QP(qp,1) - QP(qp,2) + 1)) * (QP(qp,2) + 1) * ...
               node(4,:)) + QP(qp,1) * (QP(qp,2) - 1) * node(5,:) - 1 / 2 * (QP(qp,2) * ...
               QP(qp,2) - 1) * node(6,:) - QP(qp,1) * (QP(qp,2) + 1) * node(7,:) + 1 / 2 * ...
               (QP(qp,2) * QP(qp,2) - 1) * node(8,:) ;
    
    JQP(2,:) = 1 / 4 * (-((QP(qp,2) - 1) + (QP(qp,1) + QP(qp,2) + 1)) * (QP(qp,1) - 1) * ...
               node(1,:) + ((QP(qp,2) - 1) - (QP(qp,1) - QP(qp,2) - 1)) * (QP(qp,1) + 1) * ...
               node(2,:) + ((QP(qp,2) + 1) + (QP(qp,1) + QP(qp,2) - 1)) * (QP(qp,1) + 1) * ...
               node(3,:) - ((QP(qp,2) + 1) - (QP(qp,1) - QP(qp,2) + 1)) * (QP(qp,1) - 1) * ...
               node(4,:)) + 1 / 2 * (QP(qp,1) * QP(qp,1) - 1) * node(5,:) - (QP(qp,1) + 1) * ...
               QP(qp,2) * node(6,:) - 1 / 2 * (QP(qp,1) * QP(qp,1) - 1) * node(7,:) + ...
               (QP(qp,1) - 1) * QP(qp,2) * node(8,:) ;
   
   Area = Area + det(JQP) * Weight2P ;
end
        